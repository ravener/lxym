
package pages

const Tmux = "[tmux](http://tmux.github.io)\nis a terminal multiplexer: it enables a number of terminals\nto be created, accessed, and controlled from a single screen. tmux\nmay be detached from a screen and continue running in the background\nthen later reattached.\n\n\n```\n\n  tmux [command]     # Run a command\n                     # 'tmux' with no commands will create a new session\n\n    new              # Create a new session\n     -s \"Session\"    # Create named session\n     -n \"Window\"     # Create named Window\n     -c \"/dir\"       # Start in target directory\n\n    attach           # Attach last/available session\n     -t \"#\"          # Attach target session\n     -d              # Detach the session from other instances\n\n    ls               # List open sessions\n     -a              # List all open sessions\n\n    lsw              # List windows\n     -a              # List all windows\n     -s              # List all windows in session\n\n    lsp              # List panes\n     -a              # List all panes\n     -s              # List all panes in session\n     -t              # List all panes in target\n\n    kill-window      # Kill current window\n     -t \"#\"          # Kill target window\n     -a              # Kill all windows\n     -a -t \"#\"       # Kill all windows but the target\n\n    kill-session     # Kill current session\n     -t \"#\"          # Kill target session\n     -a              # Kill all sessions\n     -a -t \"#\"       # Kill all sessions but the target\n\n```\n\n\n### Key Bindings\n\nThe method of controlling an attached tmux session is via key\ncombinations called 'Prefix' keys.\n\n```\n----------------------------------------------------------------------\n  (C-b) = Ctrl + b    # 'Prefix' combination required to use keybinds\n\n  (M-1) = Meta + 1 -or- Alt + 1\n----------------------------------------------------------------------\n\n  ?                  # List all key bindings\n  :                  # Enter the tmux command prompt\n  r                  # Force redraw of the attached client\n  c                  # Create a new window\n\n  !                  # Break the current pane out of the window.\n  %                  # Split the current pane into two, left and right\n  \"                  # Split the current pane into two, top and bottom\n\n  n                  # Change to the next window\n  p                  # Change to the previous window\n  {                  # Swap the current pane with the previous pane\n  }                  # Swap the current pane with the next pane\n  [                  # Enter Copy Mode to copy text or view history.\n\n  s                  # Select a new session for the attached client\n                     interactively\n  w                  # Choose the current window interactively\n  0 to 9             # Select windows 0 to 9\n\n  d                  # Detach the current client\n  D                  # Choose a client to detach\n\n  &                  # Kill the current window\n  x                  # Kill the current pane\n\n  Up, Down           # Change to the pane above, below, left, or right\n  Left, Right\n\n  M-1 to M-5         # Arrange panes:\n                       # 1) even-horizontal\n                       # 2) even-vertical\n                       # 3) main-horizontal\n                       # 4) main-vertical\n                       # 5) tiled\n\n  C-Up, C-Down       # Resize the current pane in steps of one cell\n  C-Left, C-Right\n\n  M-Up, M-Down       # Resize the current pane in steps of five cells\n  M-Left, M-Right\n\n```\n\n\n### Configuring ~/.tmux.conf\n\ntmux.conf can be used to set options automatically on start up, much\nlike how .vimrc or init.el are used.\n\n```\n# Example tmux.conf\n# 2015.12\n\n\n### General\n###########################################################################\n\n# Scrollback/History limit\nset -g history-limit 2048\n\n# Index Start\nset -g base-index 1\n\n# Mouse\nset-option -g -q mouse on\n\n# Force reload of config file\nunbind r\nbind r source-file ~/.tmux.conf\n\n\n### Keybinds\n###########################################################################\n\n# Unbind C-b as the default prefix\nunbind C-b\n\n# Set new default prefix\nset-option -g prefix `\n\n# Return to previous window when prefix is pressed twice\nbind C-a last-window\nbind ` last-window\n\n# Allow swapping C-a and ` using F11/F12\nbind F11 set-option -g prefix C-a\nbind F12 set-option -g prefix `\n\n# Keybind preference\nsetw -g mode-keys vi\nset-option -g status-keys vi\n\n# Moving between panes with vim movement keys\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\n\n# Window Cycle/Swap\nbind e previous-window\nbind f next-window\nbind E swap-window -t -1\nbind F swap-window -t +1\n\n# Easy split pane commands\nbind = split-window -h\nbind - split-window -v\nunbind '\"'\nunbind %\n\n# Activate inner-most session (when nesting tmux) to send commands\nbind a send-prefix\n\n\n### Theme\n###########################################################################\n\n# Statusbar Color Palatte\nset-option -g status-justify left\nset-option -g status-bg black\nset-option -g status-fg white\nset-option -g status-left-length 40\nset-option -g status-right-length 80\n\n# Pane Border Color Palette\nset-option -g pane-active-border-fg green\nset-option -g pane-active-border-bg black\nset-option -g pane-border-fg white\nset-option -g pane-border-bg black\n\n# Message Color Palette\nset-option -g message-fg black\nset-option -g message-bg green\n\n# Window Status Color Palette\nsetw -g window-status-bg black\nsetw -g window-status-current-fg green\nsetw -g window-status-bell-attr default\nsetw -g window-status-bell-fg red\nsetw -g window-status-activity-attr default\nsetw -g window-status-activity-fg yellow\n\n\n### UI\n###########################################################################\n\n# Notification\nsetw -g monitor-activity on\nset -g visual-activity on\nset-option -g bell-action any\nset-option -g visual-bell off\n\n# Automatically set window titles\nset-option -g set-titles on\nset-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)\n\n# Statusbar Adjustments\nset -g status-left \"#[fg=red] #H#[fg=green]:#[fg=white]#S#[fg=green] |#[default]\"\n\n# Show performance counters in statusbar\n# Requires https://github.com/thewtex/tmux-mem-cpu-load/\nset -g status-interval 4\nset -g status-right \"#[fg=green] | #[fg=white]#(tmux-mem-cpu-load)#[fg=green] | #[fg=cyan]%H:%M #[default]\"\n\n```\n\n\n### References\n\n[Tmux | Home](http://tmux.github.io)\n\n[Tmux Manual page](http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/tmux.1?query=tmux)\n\n[Gentoo Wiki](http://wiki.gentoo.org/wiki/Tmux)\n\n[Archlinux Wiki](https://wiki.archlinux.org/index.php/Tmux)\n\n[Display CPU/MEM % in statusbar](https://stackoverflow.com/questions/11558907/is-there-a-better-way-to-display-cpu-usage-in-tmux)\n\n[tmuxinator - Manage complex tmux sessions](https://github.com/tmuxinator/tmuxinator)"
