
package pages

const Smallbasic = "## About\n\nSmallBASIC is a fast and easy to learn BASIC language interpreter ideal for everyday calculations, scripts and prototypes. SmallBASIC includes trigonometric, matrices and algebra functions, a built in IDE, a powerful string library, system, sound, and graphic commands along with structured programming syntax.\n\n## Development\n\nSmallBASIC was originally developed by Nicholas Christopoulos in late 1999 for the Palm Pilot. Project development has been continued by Chris Warren-Smith since around 2005.\n\nVersions of SmallBASIC have been made for a number of early hand held devices including Franklin eBookman and the Nokia 770. Also various desktop versions have been released based on a variety of GUI tool-kits, some of which have become defunct. The current supported platforms are Linux and Windows based on SDL2 and Android based on NDK. A desktop command line version is also available, although not typically released in binary form.\n\nIn around 2008 a large corporation released a BASIC like programming environment with a similar sounding name. SmallBASIC is not related to this other project.\n\n```\nREM This is a comment\n' and this is also a comment\n\nREM print text\nprint \"hello\"\n? \"? is short for PRINT\"\n\nREM Control structures\nFOR index = 0 TO 10 STEP 2\n  ? \"This is line number \"; index\nNEXT\nJ=0\nREPEAT\n J++\nUNTIL J=10\nWHILE J>0\n J--\nWEND\n\nREM Select case statement\nSelect Case \"Cool\"\n Case \"null\", 1,2,3,4,5,6,7,8,\"Cool\",\"blah\"\n Case \"Not cool\"\n   PRINT \"Epic fail\"\n Case Else\n   PRINT \"Fail\"\nEnd Select\n\nREM catching errors with TRY/CATCH\nTry\n  fn = Freefile\n  Open filename For Input As #fn\nCatch err\n  Print \"failed to open\"\nEnd Try\n\nREM User defined subs and functions\nfunc add2(x,y)\n  ' variables may be declared as local within the scope of a SUB or FUNC\n  local K\n  k = \"k will cease to exist when this FUNC returns\"\n  add2=x+y\nend\nPrint add2(5,5)\nsub print_it(it)\n  print it\nend\nprint_it \"IT....\"\n\nREM Display lines and pixels\nAt 0,ymax/2+txth(\"Q\")\nColor 1: ? \"sin(x)\":\nColor 8: ? \"cos(x)\":\nColor 12: ? \"tan(x)\"\nLine 0,ymax/2,xmax,ymax/2\nFor i=0 to xmax\n  Pset i,ymax/2-sin(i*2*pi/ymax)*ymax/4 color 1\n  Pset i,ymax/2-cos(i*2*pi/ymax)*ymax/4 color 8\n  Pset i,ymax/2-tan(i*2*pi/ymax)*ymax/4 color 12\nNext\nshowpage\n\nREM SmallBASIC is great for experimenting with fractals and other interesting effects\nDelay 3000\nRandomize\nff = 440.03\nFor j = 0 to 20\n  r = rnd * 1000 % 255\n  b = rnd * 1000 % 255\n  g = rnd * 1000 % 255\n  c = rgb(r,b,g)\n  ff += 9.444\n  for i=0 to 25000\n    f += ff\n    x = min(xmax, -x + cos(f*i))\n    y = min(ymax, -y + sin(f*i))\n    pset x, y color c\n    if (i%1000==0) then\n      showpage\n    fi\n  next\nNext j\n\nREM For computer historians, SmallBASIC can run programs\nREM found in early computer books and magazines, for example:\n10 LET A=9\n20 LET B=7\n30 PRINT A*B\n40 PRINT A/B\n\nREM SmallBASIC also has support for a few modern concepts such as JSON\naa = array(\"{\\\"cat\\\":{\\\"name\\\":\\\"harry\\\"},\\\"pet\\\":\\\"true\\\"}\")\nIf (ismap(aa) == false) Then\n  throw \"not an map\"\nEnd If\nPrint aa\n\nPAUSE\n\n```\n\n## Articles\n\n* [Getting started](http://smallbasic.sourceforge.net/?q=node/1573)\n* [Welcome to SmallBASIC](http://smallbasic.sourceforge.net/?q=node/838)\n\n## GitHub\n\n* [Source code](https://github.com/smallbasic/SmallBASIC)\n* [Reference snapshot](http://smallbasic.github.io/)"
