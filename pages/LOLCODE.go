
package pages

const Lolcode = "LOLCODE is an esoteric programming language designed to resemble the speech of [lolcats](https://upload.wikimedia.org/wikipedia/commons/a/ab/Lolcat_in_folder.jpg?1493656347257).\n\n```\nBTW This is an inline comment\nBTW All code must begin with `HAI <language version>` and end with `KTHXBYE`\n\nHAI 1.3\nCAN HAS STDIO? BTW Importing standard headers\n\nOBTW\n     ==========================================================================\n     ================================= BASICS =================================\n     ==========================================================================\nTLDR\n\nBTW Displaying text:\nVISIBLE \"HELLO WORLD\"\n\nBTW Declaring variables:\nI HAS A MESSAGE ITZ \"CATZ ARE GOOD\"\nVISIBLE MESSAGE\n\nOBTW\n    (This is a codeblock.) Variables are dynamically typed so you don't need to\n    declare their type. A variable's type matches its content. These are the\n    types:\nTLDR\n\nI HAS A STRING  ITZ \"DOGZ ARE GOOOD\" BTW type is YARN\nI HAS A INTEGER ITZ 42               BTW type is NUMBR\nI HAS A FLOAT   ITZ 3.1415           BTW type is NUMBAR\nI HAS A BOOLEAN ITZ WIN              BTW type is TROOF\nI HAS A UNTYPED                      BTW type is NOOB\n\nBTW Accepting user input:\nI HAS A AGE\nGIMMEH AGE\nBTW The variable is stored as a YARN. To convert it into NUMBR:\nAGE IS NOW A NUMBR\n\nOBTW\n     ==========================================================================\n     ================================== MATH ==================================\n     ==========================================================================\nTLDR\n\nBTW LOLCODE uses polish notation style math.\n\nBTW Basic mathematical notation:\n\nSUM OF 21 AN 33         BTW 21 + 33\nDIFF OF 90 AN 10        BTW 90 - 10\nPRODUKT OF 12 AN 13     BTW 12 * 13\nQUOSHUNT OF 32 AN 43    BTW 32 / 43\nMOD OF 43 AN 64         BTW 43 modulo 64\nBIGGR OF 23 AN 53       BTW max(23, 53)\nSMALLR OF 53 AN 45      BTW min(53, 45)\n\nBTW Binary notation:\n\nBOTH OF WIN AN WIN           BTW and: WIN if x=WIN, y=WIN\nEITHER OF FAIL AN WIN        BTW or: FAIL if x=FAIL, y=FAIL\nWON OF WIN AN FAIL           BTW xor: FAIL if x=y\nNOT FAIL                     BTW unary negation: WIN if x=FAIL\nALL OF WIN AN WIN MKAY   BTW infinite arity AND\nANY OF WIN AN FAIL MKAY  BTW infinite arity OR\n\nBTW Comparison:\n\nBOTH SAEM \"CAT\" AN \"DOG\"             BTW WIN if x == y\nDIFFRINT 732 AN 184                  BTW WIN if x != y\nBOTH SAEM 12 AN BIGGR OF 12 AN 4     BTW x >= y\nBOTH SAEM 43 AN SMALLR OF 43 AN 56   BTW x <= y\nDIFFRINT 64 AN SMALLR OF 64 AN 2     BTW x > y\nDIFFRINT 75 AN BIGGR OF 75 AN 643    BTW x < y\n\nOBTW\n     ==========================================================================\n     ============================== FLOW CONTROL ==============================\n     ==========================================================================\nTLDR\n\nBTW If/then statement:\nI HAS A ANIMAL\nGIMMEH ANIMAL\nBOTH SAEM ANIMAL AN \"CAT\", O RLY?\n    YA RLY\n        VISIBLE \"YOU HAV A CAT\"\n    MEBBE BOTH SAEM ANIMAL AN \"MAUS\"\n        VISIBLE \"NOM NOM NOM. I EATED IT.\"\n    NO WAI\n        VISIBLE \"AHHH IS A WOOF WOOF\"\nOIC\n\nBTW Case statement:\nI HAS A COLOR\nGIMMEH COLOR\nCOLOR, WTF?\n    OMG \"R\"\n        VISIBLE \"RED FISH\"\n        GTFO\n    OMG \"Y\"\n        VISIBLE \"YELLOW FISH\"\n        BTW Since there is no `GTFO` the next statements will also be tested\n    OMG \"G\"\n    OMG \"B\"\n        VISIBLE \"FISH HAS A FLAVOR\"\n        GTFO\n    OMGWTF\n        VISIBLE \"FISH IS TRANSPARENT OHNO WAT\"\nOIC\n\nBTW For loop:\nI HAS A TEMPERATURE\nGIMMEH TEMPERATURE\nTEMPERATURE IS NOW A NUMBR\nIM IN YR LOOP UPPIN YR ITERATOR TIL BOTH SAEM ITERATOR AN TEMPERATURE\n    VISIBLE ITERATOR\nIM OUTTA YR LOOP\n\nBTW While loop:\nIM IN YR LOOP NERFIN YR ITERATOR WILE DIFFRINT ITERATOR AN -10\n    VISIBLE ITERATOR\nIM OUTTA YR LOOP\n\nOBTW\n     =========================================================================\n     ================================ Strings ================================\n     =========================================================================\nTLDR\n\nBTW Linebreaks:\nVISIBLE \"FIRST LINE :) SECOND LINE\"\n\nBTW Tabs:\nVISIBLE \":>SPACES ARE SUPERIOR\"\n\nBTW Bell (goes beep):\nVISIBLE \"NXT CUSTOMER PLS :o\"\n\nBTW Literal double quote:\nVISIBLE \"HE SAID :\"I LIKE CAKE:\"\"\n\nBTW Literal colon:\nVISIBLE \"WHERE I LIVE:: CYBERSPACE\"\n\nOBTW\n     =========================================================================\n     =============================== FUNCTIONS ===============================\n     =========================================================================\nTLDR\n\nBTW Declaring a new function:\nHOW IZ I SELECTMOVE YR MOVE BTW `MOVE` is an argument\n    BOTH SAEM MOVE AN \"ROCK\", O RLY?\n        YA RLY\n            VISIBLE \"YOU HAV A ROCK\"\n        NO WAI\n            VISIBLE \"OH NO IS A SNIP-SNIP\"\n    OIC\n    GTFO BTW This returns NOOB\nIF U SAY SO\n\nBTW Declaring a function and returning a value:\nHOW IZ I IZYELLOW\n    FOUND YR \"YELLOW\"\nIF U SAY SO\n\nBTW Calling a function:\nI IZ IZYELLOW MKAY\n\nKTHXBYE\n```\n\n## Further reading:\n\n-   [LCI compiler](https://github.com/justinmeza/lci)\n-   [Official spec](https://github.com/justinmeza/lolcode-spec/blob/master/v1.2/lolcode-spec-v1.2.md)"
